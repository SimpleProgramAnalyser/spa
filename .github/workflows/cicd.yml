# Checks a branch upon pull request, and checks the master build when there are new commits


# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  BUILD_TYPE: Release

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # Run clang-format and clang-tidy
  clang-checks:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    timeout-minutes: 3

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout code from GitHub
        uses: actions/checkout@v2
        
      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v2
        with:
          path: ~/cache
          key: ${{ runner.os }}-spa-clang-checks-deps-v2

      - name: Cache build
        id: cache-build
        uses: actions/cache@v2
        with:
          path: ~/cache-build
          key: ${{ runner.os }}-spa-clang-checks-build-v4

      - name: Generate dependencies
        env:
          CACHE_HIT: ${{ steps.cache-deps.outputs.cache-hit }}
        run: |
            if [[ "$CACHE_HIT" == 'true' ]]; then
              sudo cp --verbose --force --recursive ~/cache/* /
            else
              sudo apt-get install clang-format-10
              sudo apt-get install clang-tidy
              mkdir -p ~/cache
              sudo dpkg -L clang-format-10 \
                | while IFS= read -r f; do if test -f $f; then echo $f; fi; done \
                | xargs cp --parents --target-directory ~/cache/
              sudo dpkg -L libclang-cpp10 \
                | while IFS= read -r f; do if test -f $f; then echo $f; fi; done \
                | xargs cp --parents --target-directory ~/cache/
              sudo dpkg -L clang-tidy \
                | while IFS= read -r f; do if test -f $f; then echo $f; fi; done \
                | xargs cp --parents --target-directory ~/cache/
              sudo dpkg -L clang-tidy-6.0 \
                | while IFS= read -r f; do if test -f $f; then echo $f; fi; done \
                | xargs cp --parents --target-directory ~/cache/
            fi

      - name: Build SPA
        env:
          CACHE_HIT: ${{ steps.cache-build.outputs.cache-hit }}
        run: |
            if [[ "$CACHE_HIT" == 'true' ]]; then
              sudo cp --verbose --force --recursive ~/cache-build/* /
              cd Team12/Code12/build
              sudo cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_EXPORT_COMPILE_COMMANDS=ON ..
              sudo cmake --build . --config $BUILD_TYPE
            else
              mkdir -p ~/cache-build
              cd Team12/Code12/
              rm -f -r build
              mkdir build
              cd build
              cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_EXPORT_COMPILE_COMMANDS=ON ..
              cmake --build . --config $BUILD_TYPE
              cp --parents -r --target-directory ~/cache-build/ "$(realpath ./)"
            fi
          
      - name: clang-format
        continue-on-error: false
        run: |
          ./.github/workflows/clang-format.sh
            
      - name: clang-tidy
        run: |
          cd Team12/Code12
          curl https://raw.githubusercontent.com/llvm/llvm-project/master/clang-tools-extra/clang-tidy/tool/run-clang-tidy.py -o run-clang-tidy.py
          cd build
          python ../run-clang-tidy.py -header-filter='.*' \
            -checks='-*,cppcoreguidelines-*,-cppcoreguidelines-owning-memory,-cppcoreguidelines-pro-bounds-pointer-arithmetic' \
            files src/spa | sudo tee result.txt
          if sudo grep -w "error:\|warning:\|Error while processing" result.txt; then
            exit 1
          else
            exit 0
          fi
