procedure pattern {
	pattern = x + 3 * (y - 3);
	pattern = x + 3 * y - 3;
	x = x + 3 * y - 3 * 4;
	if (x + 3 * (y - 3) < 4 ) then { 
		specialPattern = y - 3;
		specialPattern1 = 3 * y - 3;
		while (x < y) {
			x = x + (3 * y - 3) * 4;
		}
	} else {
		constantAssignment = 100 + 10000 % 1000;
		constAssignmentWithBrackets = (100 + 10000) % 1000;
	}
	y = pattern * specialPattern + 100;
	specialPattern = (x + 3 * y - 3) * (100 + 10000 % 1000);
	if (specialPattern < 3) then {
		y = pattern * specialPattern + 100;
	} else {
		read y;
		while (100 + (10000 % 1000) < 0) {
			print pattern;
			specialPatternAssignment = x + y % z * (x - y);
		}
	}
}

procedure pattern2 {
	specialPatternAssignment = x + y % (z * x - y);
	while (x + 3 * y < v * 9) {
		if (100 + 10000 % 1000 < 90) then {
			while (x + 3 * (y - 3) < v * 9) {
				call pattern;
				constAssignmentWithBrackets = (10 - 1000 * 34) % 300;
			}
		} else {
			y = y - 3;
		}
	}
	if ( 100 + 10000 < y) then {
		basicAss = 3 * y;
	} else {
		while (3 * y < 0) {
			specialPatternAssignment = x + y % (z * x - y);	
			while (z * x - y > 0) {
				call pattern;
			}
		}
	}
}

procedure pattern3 {
	specialPattern = 100 + (10000 % 1000);
	while (100 + 10000 < 0 && z * x < 3) {
		print pattern;
		specialPatternAssignment = x + y % z * (x - y);
	}
}